// Primitive Variable Declarations (with and without initialization)
int i;
float f = 0.0;
char ch = 'z';
str s = "initial";
i = 1;
i = 2;

// Edge values
int minInt = -2147483648;
int maxInt = 2147483647;
float pi = 3.14159;
char newline = '\n';
str emptyStr = "";

// Array Declarations
int[] emptyInts = [];
int[] smallInts = [1];
int[] manyInts = [1, 2, 3, 4, 5];
char[] vowels = ['a', 'e', 'i', 'o', 'u'];
char[] specialChars = ['\\', '\'', '\"'];
str[] messages = ["Hi", "Welcome", "Goodbye"];
str[] emptyStrArray = [];

// Assignments to existing variables
i = 42;
f = 9.81;
ch = 'A';
s = "updated string";

// Reassignment with valid data
minInt = 0;
maxInt = 100;
pi = 3.0;
newline = '\t';
emptyStr = "not empty";

// Reassignment of arrays
emptyInts = [99];
vowels = ['u', 'o', 'i'];
messages = ["One", "Two", "Three"];

// Mixed-case identifier test
int CamelCaseVar = 1;
str snake_case_var = "value";
CamelCaseVar = 2;
snake_case_var = "new";

// Error
m == 1;

// Type mismatch during initialization
int wrongType = "oops";  // Error
char anotherWrong = "string"; // Error
str yetAnotherWrong = 'c'; // Error

// Wrong element type in array
int[] badArray = [1, 2, "oops"]; // Error, chua handle

// Invalid character literals
char invalidChar = 'ab'; // Error

// Wrong data inside char array
char[] invalidCharArray = ["string"]; // Error

// Empty initialization on primitive
int emptyInit = []; // Error

// Undeclared variable assignment
undeclaredVar = 10; // Error

// Assignment type mismatch
i = "hello"; // Error
s = 42; // Error

// Overflow Error (optional if you want)
int huge = 9999999999999999; // Error -> Chua handle. handle sau bang runtime

// Void variable declaration
void notAllowed; // Error